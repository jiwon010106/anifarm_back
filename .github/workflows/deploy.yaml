name: Deploy to EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # SSH 설정 및 테스트
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
          echo "SSH key configured"
          
          # SSH 연결 테스트
          ssh -i ~/.ssh/id_rsa -o ConnectTimeout=10 ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} 'echo "Connection test successful"'

      # 기본 디렉토리 생성 테스트
      - name: Test basic commands
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} '
            echo "Current directory: $(pwd)"
            echo "Creating test directory..."
            mkdir -p ~/test_deploy
            echo "Directory created"
            ls -la ~/
          '

      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
        run: |
          # 임시 배포 디렉토리 생성 및 파일 전송
          ssh -i ~/.ssh/id_rsa -o ConnectTimeout=10 ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} '
            set -x
            rm -rf ~/app_deploy
            mkdir -p ~/app_deploy
            echo "Created app_deploy directory"
          '
          
          echo "Copying files to EC2..."
          scp -i ~/.ssh/id_rsa -r ./* ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:~/app_deploy/

          # .env 파일 생성 및 내용 확인
          echo "Creating .env file..."
          cat << EOF > .env
DB_HOST=${{ secrets.DB_HOST }}
DB_USER=${{ secrets.DB_USER }}
DB_PASS=${{ secrets.DB_PASS }}
DB_NAME=${{ secrets.DB_NAME }}
DB_PORT=${{ secrets.DB_PORT }}
JWT_SECRET=${{ secrets.JWT_SECRET }}
EMAIL=${{ secrets.EMAIL }}
EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}
WEATHER_API_KEY=${{ secrets.WEATHER_API_KEY }}
KMA_API_KEY=${{ secrets.KMA_API_KEY }}
KAMIS_API_KEY=${{ secrets.KAMIS_API_KEY }}
DATAENCODING_API_KEY=${{ secrets.DATAENCODING_API_KEY }}
DATADECODING_API_KEY=${{ secrets.DATADECODING_API_KEY }}
YOUTUBE_API_KEY=${{ secrets.YOUTUBE_API_KEY }}
NAVER_CLIENT_ID=${{ secrets.NAVER_CLIENT_ID }}
NAVER_CLIENT_SECRET=${{ secrets.NAVER_CLIENT_SECRET }}
MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}
MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}
MAIL_FROM=${{ secrets.MAIL_FROM }}
MAIL_PORT=${{ secrets.MAIL_PORT }}
MAIL_SERVER=${{ secrets.MAIL_SERVER }}
YOUNG_API_KEY=${{ secrets.YOUNG_API_KEY }}
INFOMATION_API_KEY=${{ secrets.INFOMATION_API_KEY }}
OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
TAVILY_API_KEY=${{ secrets.TAVILY_API_KEY }}
EOF

          echo "Checking .env file content:"
          cat .env

          echo "Copying .env file to EC2..."
          scp -i ~/.ssh/id_rsa .env ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:~/app_deploy/.env
          rm .env

          # 배포 실행 및 디버깅
          echo "Starting deployment..."
          ssh -i ~/.ssh/id_rsa -o ConnectTimeout=10 ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} '
            set -x
            cd ~/app_deploy
            pwd
            ls -la
            echo "Checking .env file:"
            cat .env
            echo "Setting file permissions..."
            chmod 600 .env
            chmod +x deploy.sh
            echo "Running deploy.sh..."
            sudo -E bash -x deploy.sh
          '
#