name: Deploy to EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Create SSH directory
        run: mkdir -p ~/.ssh/

      - name: Store SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Test SSH connection
        run: ssh -i ~/.ssh/id_rsa -o ConnectTimeout=10 ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} 'echo "SSH connection successful"'

      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
        run: |
          # 임시 배포 디렉토리 생성 및 파일 전송
          ssh -i ~/.ssh/id_rsa -o ConnectTimeout=10 ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} '
            rm -rf ~/app_deploy &&
            mkdir -p ~/app_deploy
          '
          
          scp -i ~/.ssh/id_rsa -o ConnectTimeout=10 -r ./* ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:~/app_deploy/

          # .env 파일 생성 및 배포 실행
          ssh -i ~/.ssh/id_rsa -o ConnectTimeout=10 ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} '
            cd ~/app_deploy &&
            echo "DB_HOST=${{ secrets.DB_HOST }}" > .env &&
            echo "DB_USER=${{ secrets.DB_USER }}" >> .env &&
            echo "DB_PASS=${{ secrets.DB_PASS }}" >> .env &&
            echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env &&
            echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env &&
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env &&
            echo "EMAIL=${{ secrets.EMAIL }}" >> .env &&
            echo "EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}" >> .env &&
            echo "WEATHER_API_KEY=${{ secrets.WEATHER_API_KEY }}" >> .env &&
            echo "KMA_API_KEY=${{ secrets.KMA_API_KEY }}" >> .env &&
            echo "KAMIS_API_KEY=${{ secrets.KAMIS_API_KEY }}" >> .env &&
            echo "DATAENCODING_API_KEY=${{ secrets.DATAENCODING_API_KEY }}" >> .env &&
            echo "DATADECODING_API_KEY=${{ secrets.DATADECODING_API_KEY }}" >> .env &&
            echo "YOUTUBE_API_KEY=${{ secrets.YOUTUBE_API_KEY }}" >> .env &&
            echo "NAVER_CLIENT_ID=${{ secrets.NAVER_CLIENT_ID }}" >> .env &&
            echo "NAVER_CLIENT_SECRET=${{ secrets.NAVER_CLIENT_SECRET }}" >> .env &&
            echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> .env &&
            echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> .env &&
            echo "MAIL_FROM=${{ secrets.MAIL_FROM }}" >> .env &&
            echo "MAIL_PORT=${{ secrets.MAIL_PORT }}" >> .env &&
            echo "MAIL_SERVER=${{ secrets.MAIL_SERVER }}" >> .env &&
            echo "YOUNG_API_KEY=${{ secrets.YOUNG_API_KEY }}" >> .env &&
            echo "INFORMATION_API_KEY=${{ secrets.INFORMATION_API_KEY }}" >> .env &&
            echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env &&
            echo "TAVILY_API_KEY=${{ secrets.TAVILY_API_KEY }}" >> .env &&
            chmod +x deploy.sh &&
            sudo -E bash deploy.sh
          '
#